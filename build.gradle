apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'idea'

archivesBaseName = 'io.ohjongsung.blog'
group 'io.ohjongsung'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'war'

sourceCompatibility = 1.8
targetCompatibility = 1.8
ext {
    encoding = 'UTF-8'
    springRepo = 'http://repo.spring.io/libs-release'
    versions = [
            spring    : '4.3.7.RELEASE',
            junit     : '4.12',
            servletApi: '3.0.1',
            //jspApi    : '2.2',
            //jstl      : '1.2',
            slf4j     : '1.7.25',
            logback   : '1.1.7',
            aspectj   : '1.7.0',
            cglib     : '3.1',
            jdbc      : '8.5.4',
            h2        : '1.4.193',
            mariadb   : '1.5.9',
            jpa       : '1.11.1.RELEASE',
            hibernate : '5.2.10.Final',
            jackson   : '2.8.8',
            social    : '1.1.4.RELEASE',
            github    : '1.0.0.M4',
            jsoup     : '1.9.2',
            pegdown   : '1.6.0',
            thymeleaf : '3.0.5.RELEASE'
    ]
}
[compileJava, compileTestJava]*.options*.encoding = encoding

repositories {
    mavenCentral()
    maven { url springRepo }
}
def lib = [
        'spring'  : [
                "org.springframework:spring-webmvc:${versions.spring}",
                "org.springframework:spring-orm:${versions.spring}"
        ],
        'test'    : [
                "junit:junit:${versions.junit}",
                "org.springframework:spring-test:${versions.spring}",
                "org.mockito:mockito-core:1.9.0",
                "org.hamcrest:hamcrest-library:1.3"
        ],
        'servlet' : [
                "javax.servlet:javax.servlet-api:${versions.servletApi}"
        ],
        'aop'     : [
                "org.aspectj:aspectjrt:${versions.aspectj}",
                "org.aspectj:aspectjweaver:${versions.aspectj}",
                "cglib:cglib:${versions.cglib}",
                "cglib:cglib-nodep:${versions.cglib}"
        ],
        'jdbc'    : [
                "org.apache.tomcat:tomcat-jdbc:${versions.jdbc}",
                "com.h2database:h2:${versions.h2}",
                "org.mariadb.jdbc:mariadb-java-client:${versions.mariadb}"
        ],
        'jpa'     : [
                "org.springframework.data:spring-data-jpa:${versions.jpa}",
                "org.hibernate:hibernate-entitymanager:${versions.hibernate}",
                "org.hibernate:hibernate-validator:5.4.1.Final"
        ],
        'jackson' : [
                "com.fasterxml.jackson.core:jackson-core:${versions.jackson}",
                "com.fasterxml.jackson.core:jackson-databind:${versions.jackson}",
                "com.fasterxml.jackson.core:jackson-annotations:${versions.jackson}",
                "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:${versions.jackson}"
        ],
        'social'  : [
                "org.springframework.social:spring-social-config:${versions.social}",
                "org.springframework.social:spring-social-github:${versions.github}"
        ],
        'template': [
                "org.thymeleaf:thymeleaf-spring4:${versions.thymeleaf}"
        ]
]


configurations.all {
    exclude group: "commons-logging", module: "commons-logging"
}

sourceSets {
    testUtil {
        java.srcDir 'src/testUtil/java'
        resources.srcDir 'src/testUtil/resources'
    }
}

dependencies {
    compile lib.spring, 'org.apache.commons:commons-lang3:3.4'
    compile lib.template

    providedCompile lib.servlet
    compile "org.slf4j:jcl-over-slf4j:${versions.slf4j}",
            "ch.qos.logback:logback-classic:${versions.logback}",
            lib.aop, lib.jdbc, lib.jpa, lib.jackson, lib.social
    compile "org.jsoup:jsoup:${versions.jsoup}"
    compile "org.pegdown:pegdown:${versions.pegdown}"

    testUtilCompile lib.test
    testUtilCompile sourceSets.main.output
    // pick up common test utility classes
    testCompile sourceSets.testUtil.output
    testCompile lib.test

}

task initProject {
    file(webAppDirName + "/WEB-INF/views").mkdirs()
    file(webAppDirName + "/META-INF").mkdir()
}

war {
    archiveName = "${archivesBaseName}.${extension}"
}